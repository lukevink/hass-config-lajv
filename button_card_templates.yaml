  # !toggle word-wrap

  #################################################
  #                                               #
  #                  MAIN CSS                     #
  #                                               #
  #################################################


  icon_main:
    styles:
        icon:
         - display: flex
    extra_styles: |
        .ha-card.button-card-main{
           padding: 0 !important;
        }
        @media
        only screen and (-webkit-min-device-pixel-ratio: 2),
        only screen and (   min--moz-device-pixel-ratio: 2),
        only screen and (     -o-min-device-pixel-ratio: 2/1),
        only screen and (        min-device-pixel-ratio: 2),
        only screen and (                min-resolution: 192dpi),
        only screen and (                min-resolution: 2dppx) {

          /* Retina-specific screens */
          .ha-card.button-card-main{
              padding: 0 !important;
           }

        }

  #################################################
  #                                               #
  #                    CIRCLE                     #
  #                                               #
  #################################################

  circle:
    custom_fields:
      circle: >
        [[[
          if (entity.state === 'on') {
            const input = variables.circle_input;
            const radius = 23;
            const circumference = radius * 2 * Math.PI;
            return `
              <svg width="100%" viewBox="0 0 50 50">
                <style>
                  circle {
                    transform: rotate(-90deg);
                    transform-origin: 50% 50%;
                    stroke-dasharray: ${circumference};
                    stroke-dashoffset: ${circumference - input / 100 * circumference};
                  }
                  tspan {
                    font-size: 10px;
                  }
                </style>
                <circle cx="25" cy="25" r="${radius}" stroke="${variables.circle_color}" stroke-width="2" fill="none" />
              </svg>
            `;
          }
        ]]]
    styles:
      custom_fields:
        circle:
          - top: 0%
          - left: 0%
          - width: 4vw
          - position: absolute
          - letter-spacing: 0.03vw



  #################################################
  #                                               #
  #                   LIGHT                      #
  #                                               #
  #################################################
  
  color_light:
    styles:
      card:
        - border-radius: 50%
        - height: 4em
        - width: 4em
        - margin: 4px

  light:
    template:
     - icon_main
     - circle
    show_state: false
    show_icon: true
    show_name: false
    show_label: false
    size: 55%
    color: auto
    color_type: icon
    tap_action:
      action: toggle
      haptic: light
    styles:
      card:
        - width: 4vw
        - height: 4vw
        - borderRadius: 10vw
        - background-color: >
            [[[ return (entity.state === 'on' || entity.state === 'home') ? 'rgba(255, 255, 255, 1.0)' : 'rgba(115, 115, 115, 0.6)'; ]]]
    variables:
      circle_input: >
        [[[ return Math.round(entity.attributes.brightness / 2.54); ]]]
      circle_color: var(--button-card-light-color)
    hold_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        style:
          $: |
            .popup-inner{
              padding: 15px 0 30px 0;
            }

            .mdc-dialog .mdc-dialog__container {
            }
            .mdc-dialog .mdc-dialog__container .mdc-dialog__surface {
              border-radius: 2vw;
            }
            .mdc-dialog .mdc-dialog__scrim {
                backdrop-filter: blur(10px);
            }
            ha-svg-icon {
                margin-top:-7px;
            }
          .: |
            :host {
              --mdc-dialog-scrim-color: rgba(0,0,0,0.5);
            }
            mwc-icon-button {
              color: #FFF;
            }
        title: >
          [[[ return entity.attributes.friendly_name ]]]
        card:
          type: entities
          entities:
            - type: custom:light-popup-card
              entity: >
                [[[ return entity.entity_id ]]]
              icon: none
              hideIcon: true
              fullscreen: false
              brightnessWidth: 130px
              brightnessHeight: 360px
              borderRadius: 1.7em
              sliderColor: '#c7c7c7'
              sliderTrackColor: rgba(25, 25, 25, 0.9)
            - type: custom:hui-element
              card_type: horizontal-stack
              card_mod:
                style: >
                  #root {
                    justify-content: center;
                    margin-top: 2em;
                  }
              cards:
                - type: custom:button-card
                  styles:
                    card:
                      - background: '#d8d9e1'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 153
                  template: color_light
                - type: custom:button-card
                  styles:
                    card:
                      - background: '#d5b08d'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 326
                  template: color_light
            - type: custom:hui-element
              card_type: horizontal-stack
              card_mod:
                style: >
                  #root {
                    justify-content: center;
                    margin-bottom: 1em;
                  }
              cards:
                - type: custom:button-card
                  styles:
                    card:
                      - background: '#ce944b'
                  tap_action:
                    action: call-service
                    service: light.turn_on
                    service_data:
                      entity_id: >
                        [[[ return entity.entity_id ]]]
                      color_temp: 500
                  template: color_light
                - type: custom:button-card
                  styles:
                    card:
                      [background: 'radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 80%),
                      conic-gradient(rgb(120, 39, 230), rgb(230, 34, 231), rgb(228, 5, 136), rgb(228, 25, 25),
                      rgb(229, 105, 30), rgb(232, 226, 46), rgb(125, 230, 41), rgb(52, 232, 40), rgb(51, 231, 92),
                      rgb(52, 232, 224), rgb(32, 125, 229), rgb(18, 39, 229), rgb(120, 39, 230))']
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      command: popup
                      title: >
                        [[[ return entity.attributes.friendly_name ]]]
                      card:
                        type: custom:light-entity-card
                        entity: >
                          [[[ return entity.entity_id ]]]
                        brightness: true
                        color_temp: true
                        full_width_sliders: false
                        hide_header: true
                        show_slider_percent: true
                        smooth_color_wheel: true
                        persist_features: true
                        consolidate_entities: true
                  template: color_light




  #################################################
  #                                               #
  #                Group Light                    #
  #                                               #
  #################################################

  light_group:
    icon: mdi:google-circles-communities
    template:
     - icon_main
     - circle
    show_state: false
    show_icon: true
    show_name: false
    show_label: false
    color_type: icon
    color: rgb(255, 159, 0)
    color_off: rgb(255, 255, 255)
    size: 55%
    tap_action:
      action: toggle
      haptic: light
    styles:
      card:
        - width: 4vw
        - height: 4vw
        - borderRadius: 10vw
        - background-color: >
            [[[ return (entity.state === 'on' ) ? 'rgba(255, 255, 255, 1.0)' : 'rgba(115, 115, 115, 0.6)'; ]]]
    variables:
      circle_input: >
        [[[ return Math.round(entity.attributes.brightness / 2.54); ]]]
    hold_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        style:
          $: |
            s.popup-inner{
              padding: 15px 0 30px 0;
            }
            .mdc-dialog .mdc-dialog__container {
            }
            .mdc-dialog .mdc-dialog__container .mdc-dialog__surface {
              border-radius: 2vw;
            }
            .mdc-dialog .mdc-dialog__scrim {
                backdrop-filter: blur(10px);
            }
            ha-svg-icon {
                margin-top:-7px;
            }
          .: |
            :host {
              --mdc-dialog-scrim-color: rgba(0,0,0,0.5);
            }
            mwc-icon-button {
              color: #FFF;
            }
        title: >
          [[[ return entity.attributes.friendly_name ]]]
        card:
          type: entities
          entities:
            - type: custom:light-popup-card
              entity: >
                [[[ return entity.entity_id ]]]
              icon: none
              hideIcon: true
              fullscreen: false
              brightnessWidth: 130px
              brightnessHeight: 360px
              borderRadius: 1.7em
              sliderColor: '#c7c7c7'
              sliderTrackColor: rgba(25, 25, 25, 0.9)

  #################################################
  #                                               #
  #                White Light                    #
  #                                               #
  #################################################


  light_white:
    template:
     - icon_main
     - circle
    show_state: false
    show_icon: true
    show_name: false
    show_label: false
    size: 55%
    color_type: icon
    color: rgb(255, 159, 0)
    color_off: rgb(255, 255, 255)
    tap_action:
      action: toggle
      haptic: light
    styles:
      card:
        - width: 4vw
        - height: 4vw
        - borderRadius: 10vw
        - background-color: >
            [[[ return (entity.state === 'on' || entity.state === 'home') ? 'rgba(255, 255, 255, 1.0)' : 'rgba(115, 115, 115, 0.6)'; ]]]
    variables:
      circle_input: >
        [[[ return Math.round(entity.attributes.brightness / 2.54); ]]]
    hold_action:
      action: fire-dom-event
      browser_mod:
        command: popup
        style:
          $: |
            s.popup-inner{
              padding: 15px 0 30px 0;
            }
            .mdc-dialog .mdc-dialog__container {
            }
            .mdc-dialog .mdc-dialog__container .mdc-dialog__surface {
              border-radius: 2vw;
            }
            .mdc-dialog .mdc-dialog__scrim {
                backdrop-filter: blur(10px);
            }
            ha-svg-icon {
                margin-top:-7px;
            }
          .: |
            :host {
              --mdc-dialog-scrim-color: rgba(0,0,0,0.5);
            }
            mwc-icon-button {
              color: #FFF;
            }
        title: >
          [[[ return entity.attributes.friendly_name ]]]
        card:
          type: entities
          entities:
            - type: custom:light-popup-card
              entity: >
                [[[ return entity.entity_id ]]]
              icon: none
              hideIcon: true
              fullscreen: false
              brightnessWidth: 130px
              brightnessHeight: 360px
              borderRadius: 1.7em
              sliderColor: '#c7c7c7'
              sliderTrackColor: rgba(25, 25, 25, 0.9)
